// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using belt.Models;

namespace belt.Migrations
{
    [DbContext(typeof(BeltContext))]
    [Migration("20190823181522_secMig")]
    partial class secMig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("belt.Models.Association", b =>
                {
                    b.Property<int>("AssociationId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("PersonId");

                    b.Property<int>("ThingId");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("AssociationId");

                    b.HasIndex("PersonId");

                    b.HasIndex("ThingId");

                    b.ToTable("associations");
                });

            modelBuilder.Entity("belt.Models.Occasion", b =>
                {
                    b.Property<int>("OccasionId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CoordinatorId");

                    b.Property<int?>("CoordinatorUserUserId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("DurationInt");

                    b.Property<string>("DurationString");

                    b.Property<DateTime>("Time");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("OccasionId");

                    b.HasIndex("CoordinatorUserUserId");

                    b.ToTable("occasions");
                });

            modelBuilder.Entity("belt.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("UserId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("belt.Models.Association", b =>
                {
                    b.HasOne("belt.Models.User", "Person")
                        .WithMany("Occasions")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("belt.Models.Occasion", "Thing")
                        .WithMany("Attendants")
                        .HasForeignKey("ThingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("belt.Models.Occasion", b =>
                {
                    b.HasOne("belt.Models.User", "CoordinatorUser")
                        .WithMany()
                        .HasForeignKey("CoordinatorUserUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
